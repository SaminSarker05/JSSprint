
===== MONGODB

free cloud hosting
noSQL
non relational -> doesnt require row/column architecture; store instead as json
collection = column = table
document = row -> holds key value pairs

MONGODB ATLAS - cloud option for database good free tier
clustor - group of servers to choose for database deployment - free tier available

connect to clustor from node application

database holds collections

MONGOOSE = enables easy development with node; a node module
mongoose = node module for interaction with mongodb database

connect to DB before spinning up server
use async and await keywords to make a promise with try catch block

use mongoose.Schema({
  name: String
  completed: Boolean
})
to set up structure for ducments in db
Collection = group of ducuments - table
document = field value pairs - row in table

create document schema for a collection
export schema as a mongoose.model(name, schema) to allow class based interaction with controllers
models = documents

callback functions must be async when interacting with db -> still return back response
await for model method
.create()


===== NODEMON
node utility that automatically restarts application when file changes detected

===== ORDER
when connecting to DB in project make operation async 
only spin up server after connection to DB


===== PUT VS PATCH
put is replacement of entire document
patch is a partial replacement

